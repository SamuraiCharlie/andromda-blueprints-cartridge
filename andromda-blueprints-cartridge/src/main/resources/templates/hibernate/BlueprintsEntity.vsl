#set ($generatedFile = "${entity.packagePath}/${entity.entityName}.java")
// license-header java merge-point
//
// Attention: Generated code! Do not modify by hand!
// Generated by: hibernate/BlueprintsEntity.vsl in andromda-blueprints-cartridge.
//
#if ($stringUtils.isNotBlank($entity.packageName))
package $entity.packageName;
#end

import com.tinkerpop.blueprints.Direction;
import com.tinkerpop.frames.Adjacency;
import com.tinkerpop.frames.Incidence;
import com.tinkerpop.frames.Property;
import com.tinkerpop.frames.modules.javahandler.JavaHandler;
import com.tinkerpop.frames.modules.javahandler.JavaHandlerClass;
import com.tinkerpop.frames.VertexFrame;

/**
$entity.getDocumentation(" * ")
 */

// HibernateEntity.vsl annotations merge-point
##@JavaHandlerClass(${entity.entityName}Impl.class)
public interface $entity.entityName extends VertexFrame {

    
    // Generate $entity.attributes.size() attributes
## Identifier attribute is automatically added to the list of attributes.
#foreach ($attribute in $entity.attributes)
	
	
	
	@Property("$attribute.name")
	public ${attribute.getterSetterTypeName} ${attribute.getterName}();
	
	
	
	@Property("$attribute.name")
	public void ${attribute.setterName}(${attribute.getterSetterTypeName} value);
#end


    // Generate $entity.associationEnds.size() associations
#foreach ($associationEnd in $entity.associationEnds)
#set ($target = $associationEnd.otherEnd)
#if ($target.navigable || ($associationEnd.child && $entity.foreignHibernateGeneratorClass))
#if ($target.many)
	#set ($collectionTypeName = $target.getterSetterTypeName)
	#set ($index1 = $collectionTypeName.indexOf("<"))
	#set ($index1 = $index1 + 1) 
	#set ($index2 = $collectionTypeName.indexOf(">"))
	#set ($typeName = $collectionTypeName.substring($index1, $index2)) 
	@Adjacency(label="$target.name")
    public Iterable<$typeName> ${target.getterName}();
    
    #set ($adderName = $target.adderName)
    #if ($adderName.endsWith("s"))
    #set ($len = $adderName.length() - 1)
    #set ($adderName = $adderName.substring(0, $len))
    #end
    
    #set ($addName = $target.name)
    #if ($addName.endsWith("s"))
    #set ($len = $addName.length() - 1)
    #set ($addName = $addName.substring(0, $len))
    #end
    
    @Adjacency(label="$target.name")
    public void ${adderName}($typeName $addName);
    
#else
    public $target.getterSetterTypeName $target.name;
#end
#end
#end


#foreach ($operation in $entity.businessOperations)
    /**
$operation.getDocumentation("     * ")
#foreach ($argument in $operation.arguments)
     * @param $argument.name $argument.getDocumentation("")
#end
#if ($operation.returnTypePresent)
     * @return $operation.getterSetterReturnTypeName
#end
#foreach ($exception in $operation.exceptions)
     * @throws $exception.name
#end
     */
#if ($operation.exceptionsPresent)
    $operation.visibility abstract $operation.getterSetterReturnTypeName $operation.signature
        throws $operation.exceptionList;
#else
    $operation.visibility abstract $operation.getterSetterReturnTypeName $operation.signature;
#end

#end

// HibernateEntity.vsl merge-point
}